{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/configActions.js","components/Header.jsx","theme/light.js","theme/dark.js","theme/components/Container.js","apis/accuWeather.js","consts/accuWeather.js","components/LocationItem.jsx","redux/actions/locationActions.js","components/LocationList.jsx","components/LocationInput.jsx","theme/components/Card.js","components/ForecastItem.jsx","components/LocationForecastList.jsx","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/configReducer.js","redux/reducers/locationReducer.js","index.js"],"names":["DARK_MODE","ADD_LOCATION","DELETE_LOCATION","UPDATE_LOCATION","darkModeAction","variable","type","payload","Header","dispatch","useDispatch","themeValue","useSelector","state","configReducer","darkMode","themeChange","value","window","localStorage","setItem","className","style","backgroundColor","padding","to","onClick","lightTheme","colors","background","textColor","cardBackground","darkTheme","styled","div","props","theme","axios","create","baseURL","accuWeatherKey","LocationItem","location","useState","temp","weatherDesc","weather","setWeather","locations","locationReducer","currentLocation","setCurrentLocation","passedLocation","useLocation","isFavorite","find","currentLoc","key","favoriteChange","favorite","locationKey","actions","addLocation","useEffect","a","accuWeatherApi","get","params","apikey","accuWeather","metric","result","temperature","data","Temperature","Metric","Value","unit","Unit","phrase","WeatherText","getCurrentWeatherByLocationKey","then","name","pathname","LocationList","color","map","LocationInput","city","setCity","setLocation","getLocationKey","q","Key","onChange","e","target","ForecastItem","forecast","currentForecast","epoch","Date","EpochDate","weekDay","toLocaleDateString","weekday","date","Card","Maximum","Minimum","Day","IconPhrase","LocationForecast","setForcast","DailyForecasts","getForecast","length","daily","App","config","tlv","getItem","Container","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.aa0f5c6d.chunk.js","sourcesContent":["export const DARK_MODE = 'darkMode'\r\nexport const ADD_LOCATION = 'addLocation'\r\nexport const DELETE_LOCATION = 'deleteLocation'\r\nexport const UPDATE_LOCATION = 'updateLocation'\r\nexport const GET_CITY_CURRENT_WEATHER = 'getCityCurrentWeather'\r\n","import {\r\n    DARK_MODE\r\n} from './actionTypes'\r\n\r\nexport function darkModeAction(variable) {\r\n    return {\r\n        type: DARK_MODE,\r\n        payload: variable\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { darkModeAction } from '../redux/actions/configActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const config = useSelector((state) => state.configReducer)\r\n  const themeValue = config.darkMode\r\n\r\n  const themeChange = (value) => {\r\n    window.localStorage.setItem('theme', value)\r\n    dispatch(darkModeAction(value))\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"ui secondary pointing menu \"\r\n      style={{ backgroundColor: 'orange', padding: 3 }}\r\n    >\r\n      <Link to=\"/weather\" className=\"ui button teal\">\r\n        <i className=\"cloud icon\"></i>Weather\r\n      </Link>\r\n      <Link to=\"/favorites\" className=\"ui button teal\">\r\n        <i className=\"star icon\"></i>Favorites\r\n      </Link>\r\n      <div className=\"right menu\">\r\n        <Link to=\"/\" className=\"item \">\r\n          <i className=\"home icon\"></i>\r\n        </Link>\r\n        <div className=\"ui buttons\">\r\n          <button\r\n            className={`ui button teal  ${\r\n              themeValue === 'dark' ? 'active' : ''\r\n            }`}\r\n            onClick={() => themeChange('dark')}\r\n          >\r\n            Dark\r\n          </button>\r\n          <div className=\"or ui\"></div>\r\n          <button\r\n            className={`ui button teal  ${\r\n              themeValue === 'light' ? 'active' : ''\r\n            }`}\r\n            onClick={() => themeChange('light')}\r\n          >\r\n            Light\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const lightTheme = {\r\n  colors: {\r\n    background: '#fcfefe',\r\n    textColor: '#1a2639',\r\n    cardBackground: '#e3e3e3'\r\n  },\r\n}\r\n\r\nexport default lightTheme\r\n","const darkTheme = {\r\n  colors: {\r\n    background: '#1a2639',\r\n    textColor: '#fcfefe',\r\n    cardBackground: '#455d7a',\r\n  },\r\n}\r\n\r\nexport default darkTheme\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background: ${(props) => props.theme.colors.background};\r\n  color: ${(props) => props.theme.colors.textColor};\r\n  flex-direction: column;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: sans-serif;\r\n  padding: 12px;\r\n`\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://dataservice.accuweather.com',\r\n})\r\n","export const accuWeatherKey = 'K3LUPRDNysN4nBIYZi5hKZh1GVij3sc8'\r\nexport const tlvLocationKey = '215854'\r\nexport const locationKeyByCityUrl = `http://dataservice.accuweather.com/locations/v1/cities/search`\r\nexport const forcastByLocationKeyUrl = `http://dataservice.accuweather.com/forecasts/v1/daily/5day`\r\nexport const currentWeatherByLocationKeyUrl = `http://dataservice.accuweather.com/currentconditions/v1`\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addLocation, deleteLocation } from '../redux/actions/locationActions'\r\nimport { useLocation } from 'react-router'\r\nimport accuWeatherApi from '../apis/accuWeather'\r\nimport * as accuWeather from '../consts/accuWeather'\r\n\r\nconst LocationItem = ({ location }) => {\r\n  const dispatch = useDispatch()\r\n  const [weather, setWeather] = useState({ temp: '', weatherDesc: '' })\r\n  const locations = useSelector((state) => state.locationReducer)\r\n  const [currentLocation, setCurrentLocation] = useState(location)\r\n  const passedLocation = useLocation()\r\n  const isFavorite = locations.find(\r\n    (currentLoc) => currentLoc.key === location.key,\r\n  )\r\n  const favoriteChange = (favorite) => {\r\n    if (favorite) {\r\n      dispatch(deleteLocation(location.key))\r\n    } else {\r\n      dispatch(addLocation(location))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getCurrentWeatherByLocationKey(locationKey) {\r\n      const result = await accuWeatherApi.get(\r\n        `/currentconditions/v1/${locationKey}`,\r\n        {\r\n          params: {\r\n            apikey: accuWeather.accuWeatherKey,\r\n            metric: true,\r\n          },\r\n        },\r\n      )\r\n      return {\r\n        temperature: result.data[0].Temperature.Metric.Value,\r\n        unit: result.data[0].Temperature.Metric.Unit,\r\n        phrase: result.data[0].WeatherText,\r\n      }\r\n    }\r\n    getCurrentWeatherByLocationKey(currentLocation.key).then(function (result) {\r\n      setWeather(result)\r\n    })\r\n  }, [currentLocation.key])\r\n\r\n  useEffect(() => {\r\n    if (passedLocation.location) {\r\n      setCurrentLocation(passedLocation.location)\r\n    }\r\n  }, [passedLocation.location])\r\n\r\n  return (\r\n    <div className=\"ui card\">\r\n      <div className=\"content\">\r\n        <i className=\"right floated start icon\"></i>\r\n        <div className=\"header\">{currentLocation.name}</div>\r\n        <div className=\"description\">\r\n          <p className=\"floated right\">\r\n            temperature: {weather.temperature} {weather.unit}\r\n          </p>\r\n          <p>{weather.phrase}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"extra content\">\r\n        <span className=\"left floated\">\r\n          <Link\r\n            to={{\r\n              pathname: `/weather/forecast/${location.name}`,\r\n              location,\r\n            }}\r\n            className=\"ui button teal\"\r\n          >\r\n            Forecast\r\n          </Link>\r\n        </span>\r\n        <span\r\n          className=\"right floated star \"\r\n          onClick={() => favoriteChange(isFavorite)}\r\n        >\r\n          <i className={`star icon ${isFavorite ? 'active' : ''}`}></i>\r\n          Favorite\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationItem\r\n","import * as actions from './actionTypes'\r\n\r\nexport function addLocation(location) {\r\n  return {\r\n    type: actions.ADD_LOCATION,\r\n    payload: location,\r\n  }\r\n}\r\n\r\nexport function deleteLocation(locationKey) {\r\n  return {\r\n    type: actions.DELETE_LOCATION,\r\n    payload: locationKey,\r\n  }\r\n}\r\n\r\nexport function updateLocation(location) {\r\n  return {\r\n    type: actions.UPDATE_LOCATION,\r\n    payload: location,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport LocationItem from './LocationItem'\r\n\r\nconst LocationList = () => {\r\n  const locations = useSelector((state) => state.locationReducer)\r\n  return (\r\n    <div style={{ color: 'orange', padding: 6 }}>\r\n      <div className=\"ui three column grid\">\r\n        <div className=\"column center aligned\">\r\n          <i className=\"ui large icon star\" />\r\n        </div>\r\n        <div className=\"column center aligned\">\r\n          <h1>Favorites</h1>\r\n        </div>\r\n        <div className=\"column center aligned\">\r\n          <i className=\"ui large icon star\" />\r\n        </div>\r\n      </div>\r\n      {locations.map((location) => {\r\n        return <LocationItem key={location.key} location={location} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationList\r\n","import React, {  useState } from 'react'\r\nimport LocationItem from './LocationItem'\r\nimport accuWeatherApi from '../apis/accuWeather'\r\nimport * as accuWeather from '../consts/accuWeather'\r\n\r\nconst LocationInput = () => {\r\n  let [city, setCity] = useState('')\r\n  let [location, setLocation] = useState()\r\n\r\n  \r\n  const getLocationKey = async (city) => {\r\n    const result = await accuWeatherApi.get('/locations/v1/cities/search', {\r\n      params: {\r\n        apikey: accuWeather.accuWeatherKey,\r\n        q: city,\r\n      },\r\n    })    \r\n    setLocation({ name: city, key: result.data[0].Key })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui center aligned basic segment\">\r\n        <div className=\"ui left icon action input\">\r\n          <input\r\n            onChange={(e) => {\r\n              setCity(e.target.value)\r\n            }}\r\n            value={city}\r\n            type=\"text\"\r\n          />\r\n          <button\r\n            className=\"ui button teal\"\r\n            onClick={() => {\r\n              getLocationKey(city)\r\n              setCity('')\r\n            }}\r\n          >\r\n            <i className=\"search ui icon\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {location && (\r\n        <div className=\"ui center aligned basic segment\">\r\n          <LocationItem location={location} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationInput\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background: ${(props) => props.theme.colors.cardBackground};\r\n  color: ${(props) => props.theme.colors.textColor};\r\n  flex-direction: column;\r\n  width: 10vw;\r\n  height: 20vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: sans-serif;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n`\r\n","import React from 'react'\r\nimport Card from '../theme/components/Card'\r\n\r\nconst ForecastItem = (forecast) => {\r\n  const currentForecast = forecast.forecast\r\n  const epoch = new Date(currentForecast.EpochDate * 1000)\r\n  const weekDay = epoch.toLocaleDateString('default', { weekday: 'long' })\r\n  const date = epoch.toLocaleDateString()\r\n\r\n  return (\r\n    <Card>\r\n      <div className=\"ui content\">\r\n        <h5>\r\n          {`${weekDay}\r\n           ${date}\r\n          `}\r\n        </h5>\r\n\r\n        <div className=\"ui description \">\r\n          <div>\r\n            max: {currentForecast.Temperature.Maximum.Value}{' '}\r\n            {currentForecast.Temperature.Maximum.Unit}\r\n          </div>\r\n          <div>\r\n            min: {currentForecast.Temperature.Minimum.Value}{' '}\r\n            {currentForecast.Temperature.Maximum.Unit}\r\n          </div>\r\n          <h3>{currentForecast.Day.IconPhrase}</h3>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ForecastItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport ForecastItem from './ForecastItem'\r\nimport accuWeatherApi from '../apis/accuWeather'\r\nimport * as accuWeather from '../consts/accuWeather'\r\n\r\nconst LocationForecast = () => {\r\n  const location = useLocation()\r\n  const [forecast, setForcast] = useState([])\r\n  useEffect(() => {\r\n    async function getForecast(key) {\r\n      const result = await accuWeatherApi.get(\r\n        `/forecasts/v1/daily/5day/${key}`,\r\n        {\r\n          params: {\r\n            apikey: accuWeather.accuWeatherKey,\r\n            metric: true,\r\n          },\r\n        },\r\n      )\r\n      return result.data.DailyForecasts\r\n    }\r\n\r\n    getForecast(location.location.key).then(function (result) {\r\n      setForcast(result)\r\n    })\r\n  }, [location.location.key])\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>{location.location.name} forecast </h1>\r\n        {forecast.length > 0 && (\r\n          <div className=\"ui cards\">\r\n            {forecast.map((daily) => {\r\n              return <ForecastItem forecast={daily} key={daily.Date} />\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationForecast\r\n","import { BrowserRouter, Route } from 'react-router-dom'\nimport './App.css'\nimport { ThemeProvider } from 'styled-components'\nimport Header from './components/Header'\nimport lightTheme from './theme/light'\nimport darkTheme from './theme/dark'\nimport Container from './theme/components/Container'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport { darkModeAction } from './redux/actions/configActions'\nimport LocationList from './components/LocationList'\nimport LocationInput from './components/LocationInput'\nimport LocationItem from './components/LocationItem'\nimport LocationForecast from './components/LocationForecastList'\nimport * as accuWeather from './consts/accuWeather'\n\nfunction App() {\n  const config = useSelector((state) => state.configReducer)\n  const themeValue = config.darkMode\n  const dispatch = useDispatch()\n  const [tlv] = useState({\n    name: 'Tel Aviv',\n    key: accuWeather.tlvLocationKey,\n  })\n\n  useEffect(() => {\n    if (!config.darkMode) {\n      dispatch(darkModeAction(window.localStorage.getItem('theme')))\n    }\n  }, [config.darkMode, dispatch])\n\n  return (\n    <ThemeProvider theme={themeValue === 'light' ? lightTheme : darkTheme}>\n      <BrowserRouter>\n        <Container>\n          <Header />\n          <Route\n            path=\"/\"\n            exact\n            component={() => <LocationItem location={tlv} />}\n          />\n          <Route path=\"/favorites\" exact component={LocationList} />\n          <Route path=\"/weather\" exact component={LocationInput} />\n          <Route path=\"/weather/:location\" exact component={LocationItem} />\n          <Route\n            path=\"/weather/forecast/:location\"\n            exact\n            component={LocationForecast}\n          />\n        </Container>\n      </BrowserRouter>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\r\nimport { configReducer } from './configReducer'\r\nimport { locationReducer } from './locationReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  configReducer,\r\n  locationReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import { DARK_MODE } from '../actions/actionTypes'\r\n\r\nexport let configReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case DARK_MODE:\r\n      return { ...state, darkMode: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as actions from '../actions/actionTypes'\r\n\r\nexport let locationReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case actions.ADD_LOCATION:\r\n      return [...state, action.payload]\r\n    case actions.DELETE_LOCATION:\r\n      return state.filter((location) => location.key !== action.payload)\r\n    case actions.UPDATE_LOCATION:\r\n      return state.map((location) =>\r\n        location.key !== action.payload.key ? location : action.payload,\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Reducer from './redux/reducers'\nimport { Provider } from 'react-redux'\nimport {  applyMiddleware, createStore} from 'redux'\nimport promiseMiddleware from 'redux-promise'\nimport ReduxThunk from 'redux-thunk'\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())} >\n      <App />\n  </Provider>\n\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}